services:

  nginx:
    image: nginx
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/conf.d/aptrs.conf
      - ./Certificate:/etc/nginx/certs
      - static_volume:/home/aptrs/APTRS/static/  
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    depends_on:
      - aptrs
    networks:
        - aptrs

  postgres:
    image: "postgres:latest"
    restart: always
    env_file: "APTRS/.env"
    volumes:
      - $HOME/APTRS/postgresql_data:/var/lib/postgresql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
    ports:
     - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
       - aptrs
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}",]
      interval: 10s
      timeout: 5s
      retries: 5


  cache:
    image: redis:6.2-alpine
    restart: always
    env_file: "APTRS/.env"
    networks:
       - aptrs
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:  
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_URL: ${REDIS_URL}
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
    volumes: 
      - cache:/data
        
      
  aptrs:
    env_file: "APTRS/.env"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_URL: redis://cache:6379/
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      WHITELIST_IP: ${WHITELIST_IP}
      ALLOWED_HOST: ${ALLOWED_HOST}
      CORS_ORIGIN: ${CORS_ORIGIN}
    depends_on:
      - postgres
      - cache
    
    build:
        context: .
        dockerfile: Dockerfile
    volumes:
      - $HOME/APTRS/api_data:/home/aptrs/.aptrs
      - static_volume:/home/aptrs/APTRS/static/
    ports:
     - "8000:8000"
    networks:
      - aptrs
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/api/config/ping/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    links:
      - "postgres"
      - "cache"

      
networks:
  aptrs:


volumes:
  static_volume: 
  cache:
  
  