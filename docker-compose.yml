version: '3.8'
services:

  nginx:
    image: nginx
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/conf.d/aptrs.conf
      - static_volume:/home/aptrs/APTRS/static/  
    ports:
      - 80:80
    restart: unless-stopped
    depends_on:
      - aptrs
    networks:
        - aptrs





  postgres:
    image: "postgres:latest"
    restart: always
    volumes:
      - $USERPROFILE/APTRS/postgresql_data:/var/lib/postgresql
    environment:
      - POSTGRES_USER=aptrsdbuser
      - POSTGRES_PASSWORD=aptrsdbpassword
      - POSTGRES_DB=aptrs
    ports:
     - "5432:5432"
    networks:
       - aptrs
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5


  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    environment:  
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      - REDIS_URL=redis://cache:6379/ 
    volumes: 
      - cache:/data
        
      
  aptrs:
    environment:
      - POSTGRES_USER=aptrsdbuser
      - POSTGRES_PASSWORD=aptrsdbpassword
      - POSTGRES_DB=aptrs
    depends_on:
      - postgres
      - cache
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - $USERPROFILE/aptrs:/home/aptrs/.aptrs
      - static_volume:/home/aptrs/APTRS/static/
    ports:
     - "8000:8000"
    networks:
      - aptrs
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5432 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    links:
      - "postgres"
      
networks:
  aptrs:


volumes:
  static_volume: 
  cache:
  
  