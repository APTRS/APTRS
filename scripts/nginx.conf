# Define upstream for Gunicorn
upstream django {
    server aptrs:8000;  # Use Docker service name for communication
}


# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name _;  # Replace with your domain or use _ for default

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
    server_tokens off;
    
}

# HTTPS server configuration
server {
    listen 443 ssl;
    server_name _;  # Replace with your domain

    # SSL configuration
    ssl_certificate /etc/nginx/certs/selfsigned.crt;  
    ssl_certificate_key /etc/nginx/certs/selfsigned.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    server_tokens off;


    ### Host Validation - > Update according to your need
    #if ( $host !~* ^(mydomain.com|www.mydomain.com)$ ) {
    #    return 444;
    #}

    # Define root and handle static/media files
    location /api {
        proxy_pass http://aptrs:8000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html =404;
  }

    location /static/ {
        alias /home/aptrs/APTRS/static/;  # Path to your static files
    }

    location /media/ {
        alias /home/aptrs/APTRS/static/media/;  # Path to your media files
    }

    access_log /var/log/nginx/APTRS_access.log;  # Path to access log file
    error_log /var/log/nginx/APTRS_error.log;   # Path to error log file
}