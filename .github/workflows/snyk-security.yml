

name: Snyk Security

on:
  push:
    branches: ["main", "API"]
  pull_request:
     branches: ["main", "API"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Snyk CLI to check for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb

        # For Snyk Open Source you must first set up the development environment for your application's dependencies
    
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
        # Use || true to not fail the pipeline
      - name: Snyk Code test
        run: |
              SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} snyk code test  -d --org=anof-cyber --sarif-file-output=snyk-code.sarif # || true
        continue-on-error: true

        # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
      - name: Snyk Open Source monitor
        run: SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} snyk monitor --all-projects
        continue-on-error: true

        # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
        # Use || true to not fail the pipeline.
      - name: Snyk IaC test and report
        run: SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} snyk iac test --report # || true
        continue-on-error: true

        # Build the docker image for testing
      - name: Build a Docker image
        run: |
          cp env.docker .env
          docker compose -f docker-compose.yml up -d --wait
        # Runs Snyk Container (Container and SCA) analysis and uploads result to Snyk.
      - name: Snyk Container monitor
        run: SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} snyk container monitor -t aptrs-aptrs-1 . --file=
        continue-on-error: true

        # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
