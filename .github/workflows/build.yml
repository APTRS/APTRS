name: SonarCloud-Build

on:
  push:
    branches: [ "main" ,'API']
  pull_request:
    branches: [ "main",'API' ]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost # default host value for the database
      POSTGRES_DB: aptrs
      POSTGRES_PORT: 5432
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
      cache:
        image: redis:6.2-alpine
        ports:
          - '6379:6379'
        env:  
          REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
          REDIS_URL: redis://cache:6379/ 


    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: setup environment
      env:
        POSTGRES_USER: ${{ env.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ env.POSTGRES_DB }}
        POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
        CELERY_BROKER_URL: redis://eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@cache:6379/0
        CELERY_RESULT_BACKEND: redis://eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@cache:6379/0
      run: | 
        echo "${{ secrets.ENV_FILE }}" > APTRS/.env
        echo 'WHITELIST_IP = ["http://127.0.0.1:8080", "http://127.0.0.1:8000"]' >> APTRS/.env
        echo 'ALLOWED_HOST = ["127.0.0.1","localhost","*"]'  >> APTRS/.env
        echo 'CORS_ORIGIN = ["http://127.0.0.1:8080","http://127.0.0.1:5000"]' >> APTRS/.env
      
        

    - name: Setup Poetry
      run: |
        python -m pip install poetry==1.7.1

    - name: Install Dependency Ubutnu
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt install python3-pip python3-cffi python3-brotli libpango-1.0-0 libharfbuzz0b libpangoft2-1.0-0
    
   

    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade --no-cache-dir pip poetry==1.8.2 && poetry config virtualenvs.create false && poetry install --no-root --no-interaction --no-ansi 

    - name: Migrate Database
      run: |
        poetry run python APTRS/manage.py makemigrations accounts
        poetry run python APTRS/manage.py makemigrations configapi
        poetry run python APTRS/manage.py makemigrations customers
        poetry run python APTRS/manage.py makemigrations project
        poetry run python APTRS/manage.py makemigrations vulnerability
        poetry run python APTRS/manage.py migrate
        
    - name: Unit Tests
      run: |
        poetry run python APTRS/manage.py test project
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}




        