# Generated by Django 3.2.12

from django.db import migrations


def migrate_status_to_new_fields(apps, schema_editor):
    ProjectRetest = apps.get_model('project', 'ProjectRetest')
    
    for retest in ProjectRetest.objects.all():
        # Default values
        is_active = True
        is_completed = False
        
        # Map from old status to new fields
        if retest.status == 'Completed':
            is_completed = True
            is_active = False  # A completed retest should not be active
        elif retest.status == 'On Hold':
            is_active = False
        
        # Update the retest with new field values
        retest.is_active = is_active
        retest.is_completed = is_completed
        retest.save(update_fields=['is_active', 'is_completed'])


# Reverse migration to restore status values if needed
def reverse_migration(apps, schema_editor):
    ProjectRetest = apps.get_model('project', 'ProjectRetest')
    
    for retest in ProjectRetest.objects.all():
        current_date = apps.get_model('django.utils', 'timezone').now().date()
        
        if retest.is_completed:
            retest.status = 'Completed'
        elif not retest.is_active:
            retest.status = 'On Hold'
        else:
            # Simplistic status determination based on dates
            if current_date < retest.startdate:
                retest.status = 'Upcoming'
            elif retest.startdate <= current_date <= retest.enddate:
                retest.status = 'In Progress'
            elif current_date > retest.enddate:
                retest.status = 'Delay'
        
        retest.save(update_fields=['status'])


class Migration(migrations.Migration):

    dependencies = [
        ('project', '0009_projectretest_new_status_fields'),
    ]

    operations = [
        migrations.RunPython(migrate_status_to_new_fields, reverse_migration),
    ]